CREATE OR REPLACE FUNCTION P_ISI_MASTER_MENU(
    KD_MENU1 character varying,
    MENU0 character varying,
    MENU1 character varying,
    NM_MENU1 character varying,
    PATH1 character varying,
    ICON1 character varying,
    URUT1 character varying,
    STATUSMENU1 character varying,
    KETERANGAN1 character varying)
RETURNS character varying AS
$BODY$
DECLARE
    KD_MENUX VARCHAR;
    XMENU1 VARCHAR;
    XMENU2 VARCHAR;
    XKODE VARCHAR;
    LEVELX VARCHAR;
    SUBMENUX VARCHAR;

    XMENU3 NUMERIC;
    UX NUMERIC;
    URUTX NUMERIC;
    CACAH NUMERIC;
BEGIN
    IF KD_MENU1 IS NULL OR KD_MENU1 = '' THEN
        SELECT SUBSTR(KD_MENU, 1, 2) INTO XMENU1 FROM MD_MENU ORDER BY KD_MENU DESC LIMIT 1;
        SELECT LENGTH(TO_NUMBER(SUBSTR(KD_MENU, 3, 4), '9999')::VARCHAR) INTO XMENU2 FROM MD_MENU ORDER BY KD_MENU DESC LIMIT 1;
        SELECT TO_NUMBER(SUBSTR(KD_MENU, 3, 4), '9999') INTO XMENU3 FROM MD_MENU ORDER BY KD_MENU DESC LIMIT 1;

        XMENU3 := XMENU3+1;

        IF XMENU2::INTEGER = 1 THEN
            XMENU2 := CAST('000'||XMENU3 AS VARCHAR);
        ELSE IF XMENU2::INTEGER = 2 THEN
            XMENU2 := CAST('00'||XMENU3 AS VARCHAR);
        ELSE IF XMENU2::INTEGER = 3 THEN
            XMENU2 := CAST('0'||XMENU3 AS VARCHAR);
        ELSE
            XMENU2 := XMENU3::VARCHAR;
        END IF;
        END IF;
        END IF;

        XKODE := CAST(XMENU1||XMENU2 AS VARCHAR);
        KD_MENUX := XKODE;
    ELSE
        KD_MENUX := KD_MENU1;
    END IF;

    IF MENU0 = '0' THEN
        LEVELX := '0';
        SUBMENUX := '';
    ELSE
        IF MENU1 = '0' THEN
            LEVELX := '1';
            SUBMENUX := MENU0;
        ELSE
            LEVELX := '2';
            SUBMENUX := MENU1;
        END IF;
    END IF;

    IF URUT1 IS NULL OR URUT1 = '' THEN
        IF LEVELX = '0' THEN
            SELECT URUT INTO UX FROM MD_MENU WHERE LEVEL_MENU = '0' ORDER BY URUT DESC LIMIT 1;
        ELSE
            SELECT URUT INTO UX FROM MD_MENU WHERE KD_SUBMENU = SUBMENUX ORDER BY URUT DESC LIMIT 1;
        END IF;

        IF UX IS NULL THEN
            URUTX := 1;
        ELSE
            URUTX := CAST(UX+1 AS NUMERIC);
        END IF;
    ELSE
        URUTX := URUT1::NUMERIC;
    END IF;

    SELECT COUNT(*) INTO CACAH FROM MD_MENU WHERE KD_MENU=KD_MENUX;
    IF CACAH > 0 THEN
        UPDATE MD_MENU SET NM_MENU=NM_MENU1, URUT=URUTX, NM_LINK=PATH1, STATUS=STATUSMENU1::status, LEVEL_MENU=LEVELX, KD_SUBMENU=SUBMENUX, ICON=ICON1, KETERANGAN=KETERANGAN1 WHERE KD_MENU=KD_MENUX;
    ELSE
        INSERT INTO MD_MENU (KD_MENU, NM_MENU, URUT, NM_LINK, STATUS, LEVEL_MENU, KD_SUBMENU, KETERANGAN, ICON) VALUES (KD_MENUX, NM_MENU1, URUTX, PATH1, STATUSMENU1::status, LEVELX, SUBMENUX, KETERANGAN1, ICON1);
    END IF;

RETURN KD_MENUX;
END;
$BODY$
    LANGUAGE plpgsql VOLATILE